
# Generated by KROKI
# http://www.kroki-mde.net/

from django.http import HttpResponse, HttpResponseRedirect
from django.core.urlresolvers import reverse
from django.shortcuts import render_to_response, render
from django.contrib.auth import authenticate, login, logout
from django.template import RequestContext
from django.contrib.auth.decorators import login_required
from .forms import LoginForm 

from django.views.generic.list import ListView
from django.utils import timezone
from django.views.generic.edit import CreateView

from .models import Article, Author

# homepage view
@login_required(login_url='/login/')
def index(request):
	context = {
		"projectname": "testProject007",
	}
	return render(request,'home.html', context)

# logout function	
def logout_user(request):
	form = LoginForm()
	context = {
		"projectname": "testProject007",
		"description": "This application is a prototype generated from KROKI specification. Please log in to continue.", 	
		"title": 'Login',
		"form" : form
    }
    
	logout(request)
	return render(request,'login.html', context)     
 
# test link for sanity checks            
def testdefault(request):
	return HttpResponse("Hello, world. You're at the test view.")
	
# login function
def login_user(request):   
	form = LoginForm()
	context = {
		"projectname": "testProject007",
		"description": "This application is a prototype generated from KROKI specification. Please log in to continue.",  	
		"title": 'Login',
		"form" : form
    }
	username = password = ''
	if request.POST:
		username = request.POST['username']
		password = request.POST['password']

		user = authenticate(username=username, password=password)
		if user is not None:
			if user.is_active:
				login(request, user)
				return HttpResponseRedirect(reverse('index'))
	return render(request,'login.html', context)

# Display filename007_st list form
@login_required(login_url='/login/')
def filename007_st(request):

	context = {
		"projectname": "testProject007",
		"title": 'Login',
	#	"form" : form
    }
	return render(request,'form.html', context)

# Display filename007_st add form
@login_required(login_url='/login/')	
def filename007_st_new(request): 
	form = filename007_stForm()
	context = {
		"projectname": "testProject007",
		"title": 'Login',
	#	"form" : form
    }
	return render(request,'form.html', context)
	
# Display filename007_st edit form
@login_required(login_url='/login/')	
def filename007_st_edit(request):
	form = filename007_stForm()
	context = {
		"projectname": "testProject007",
		"title": 'Login',
	#	"form" : form
    } 
	return render(request,'form.html', context)



class ArticleListView(ListView):

	model = Article
	article = Article.objects.create( title = "xxx", pub_date = timezone.now())
 	
	def get_context_data(self, **kwargs):
		context = super(ArticleListView, self).get_context_data(**kwargs)
		context['now'] = timezone.now()
		return context
 
class AuthorCreate(CreateView):
    model = Author
    fields = ['name']